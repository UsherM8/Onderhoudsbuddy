name: Build and Package OnderhoudsbuddyDotnet

on:
  push:
    branches:
      - main
      - Car
      - Login
  pull_request:
    branches:
      - main
      - Car

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: OnderhoudsbuddyDotnet.sln
      Wap_Project_Directory: OnderhoudsbuddyDotnet.Package
      Wap_Project_Path: OnderhoudsbuddyDotnet.Package\OnderhoudsbuddyDotnet.Package.wapproj

    steps:
      # 1. Checkout de broncode
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Haal de volledige geschiedenis op

      # 2. Schone NuGet-cache om corrupte of oude dependencies te verwijderen
      - name: Clear NuGet Cache
        run: nuget locals all -clear

      # 3. Installeer de juiste .NET-versie
      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # 4. Setup MSBuild voor het bouwen van project
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      # 5. Controleer bestanden in de map om ervoor te zorgen dat Solution_Name correct verwijst
      - name: Debug: List files
        run: dir

      # 6. Herstel NuGet-packages
      - name: Restore NuGet Packages
        run: |
          msbuild "${{ env.Solution_Name }}" /t:Restore /p:Configuration=${{ matrix.configuration }} /v:detailed
        env:
          Configuration: ${{ matrix.configuration }}

      # 7. Decode het PFX-certificaat voor signing
      - name: Decode PFX Certificate (for signing)
        run: |
          $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
          $certificatePath = Join-Path -Path ${{ env.Wap_Project_Directory }} -ChildPath GitHubActionsWorkflow.pfx
          [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

      # 8. Build & Package de applicatie
      - name: Build & Package the App
        run: |
          msbuild "${{ env.Wap_Project_Path }}" ^
          /p:Configuration=${{ matrix.configuration }} ^
          /p:UapAppxPackageBuildMode=StoreUpload ^
          /p:AppxBundle=Always ^
          /p:AppxBundlePlatforms="x86|x64" ^
          /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx ^
          /p:PackageCertificatePassword=${{ secrets.Pfx_Key }} ^
          /v:detailed
        env:
          Configuration: ${{ matrix.configuration }}

      # 9. Verwijder tijdelijk PFX-certificaat
      - name: Remove Temporary PFX Certificate
        run: Remove-Item -Path "${{ env.Wap_Project_Directory }}\GitHubActionsWorkflow.pfx"

      # 10. Upload Artefacten (bijvoorbeeld de MSIX-packages)
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MSIX Package
          path: ${{ env.Wap_Project_Directory }}\AppPackages
